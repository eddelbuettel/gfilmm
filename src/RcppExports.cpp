// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// fidSample
std::vector<double> fidSample(Eigen::VectorXd VT2, Eigen::VectorXd VTsum, double L, double U);
RcppExport SEXP _gfilmm_fidSample(SEXP VT2SEXP, SEXP VTsumSEXP, SEXP LSEXP, SEXP USEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type VT2(VT2SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type VTsum(VTsumSEXP);
    Rcpp::traits::input_parameter< double >::type L(LSEXP);
    Rcpp::traits::input_parameter< double >::type U(USEXP);
    rcpp_result_gen = Rcpp::wrap(fidSample(VT2, VTsum, L, U));
    return rcpp_result_gen;
END_RCPP
}
// gfilmm_
Rcpp::List gfilmm_(Eigen::VectorXd L, Eigen::VectorXd U, Eigen::MatrixXd FE, Eigen::MatrixXd RE, Eigen::MatrixXi RE2, Rcpp::IntegerVector E, size_t N, size_t thresh);
RcppExport SEXP _gfilmm_gfilmm_(SEXP LSEXP, SEXP USEXP, SEXP FESEXP, SEXP RESEXP, SEXP RE2SEXP, SEXP ESEXP, SEXP NSEXP, SEXP threshSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type L(LSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type U(USEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type FE(FESEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type RE(RESEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXi >::type RE2(RE2SEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type E(ESEXP);
    Rcpp::traits::input_parameter< size_t >::type N(NSEXP);
    Rcpp::traits::input_parameter< size_t >::type thresh(threshSEXP);
    rcpp_result_gen = Rcpp::wrap(gfilmm_(L, U, FE, RE, RE2, E, N, thresh));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gfilmm_fidSample", (DL_FUNC) &_gfilmm_fidSample, 4},
    {"_gfilmm_gfilmm_", (DL_FUNC) &_gfilmm_gfilmm_, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_gfilmm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
